/* Team Grading tables */

/* Comment Table */
CREATE TABLE Comment(
	ID INTEGER PRIMARY KEY,
	CREATED_TIME DATE,
	USER_ID INTEGER NOT NULL,
	GRADE_ID INTEGER NOT NULL,
	CONTENT TEXT NOT NULL,
	FOREIGN KEY(USER_ID) REFERENCES User(ID),
	FOREIGN KEY(GRADE_ID) REFERENCES Grade(ID)
);
CREATE TRIGGER comment_created_time AFTER INSERT ON Comment
BEGIN
	UPDATE Comment SET CREATED_TIME = Datetime('now') WHERE ROWID = NEW.ROWID;
END;

/* Grade Table */
CREATE TABLE Grade(
	ID INTEGER PRIMARY KEY,
	VALUE INTEGER NOT NULL,
	IS_LOCKED BIT DEFAULT 0,
	LAST_MODIFIED DATE,
	CREATED_TIME DATE,
	STUDENT_SECTION_ID INTEGER NOT NULL,
	FOREIGN KEY(STUDENT_SECTION_ID) REFERENCES Student_Section(ID)
);
CREATE TRIGGER grade_updated_time AFTER UPDATE ON Grade
BEGIN
	UPDATE Grade SET LAST_MODIFIED = Datetime('now') WHERE ROWID = NEW.ROWID;
END;
CREATE TRIGGER grade_created_time AFTER INSERT ON Grade
BEGIN
	UPDATE Grade SET CREATED_TIME = Datetime('now') WHERE ROWID = NEW.ROWID;
	UPDATE Grade SET LAST_MODIFIED = Datetime('now') WHERE ROWID = NEW.ROWID;
END;

/* Notification Table */
CREATE TABLE Notification(
	ID INTEGER PRIMARY KEY,
	CREATED_TIME DATE,
	IS_EXPIRED BIT DEFAULT 0,
	MESSAGE TEXT NOT NULL,
	STUDENT_SECTION_ID INTEGER NOT NULL,
	FOREIGN KEY(STUDENT_SECTION_ID) REFERENCES Student_Section(ID)
);
CREATE TRIGGER notification_created_time AFTER INSERT ON Notification
BEGIN
	UPDATE Notification SET CREATED_TIME = Datetime('now') WHERE ROWID = NEW.ROWID;
END;
